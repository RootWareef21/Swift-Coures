<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Diff</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>/*
Exercise - Define a Base Class

The exercises below are based on a game where a spaceship avoids obstacles in space. The ship is positioned at the bottom of a coordinate system and can only move left and right while obstacles "fall" from top to bottom. Throughout the exercises, you'll create classes to represent different types of spaceships that can be used in the game.

Create a Spaceship class with three variable properties: name, health, and position. The default value of name should be an empty string and health should be 0. position will be represented by an Int where negative numbers place the ship further to the left and positive numbers place the ship further to the right. The default value of position should be 0.*/



class Spaceship {
    var name: String
    var health: Int
    var position: Int
    
    init() {
        self.name = ""
        self.health = 0
        self.position = 0
    }
}




/*Create a let constant called falcon and assign it to an instance of Spaceship. After initialization, set name to "Falcon."*/

let falcon = Spaceship()
falcon.name = "Falcon"






/*Go back and add a method called moveLeft() to the definition of Spaceship. This method should adjust the position of the spaceship to the left by one. Add a similar method called moveRight() that moves the spaceship to the right. Once these methods exist, use them to move falcon to the left twice and to the right once. Print the new position of falcon after each change in position.*/




 
    func moveLeft() {
        position -= 1
    }
    
    func moveRight() {
        position += 1
    }
}

let falcon = Spaceship(name: "Falcon")

falcon.moveLeft()
print("New position of falcon: \(falcon.position)")

falcon.moveLeft()
print("New position of falcon: \(falcon.position)")

falcon.moveRight()
print("New position of falcon: \(falcon.position)")





/*The last thing Spaceship needs for this example is a method to handle what happens if the ship gets hit. Go back and add a method wasHit() to Spaceship that will decrement the ship's health by 5, then if health is less than or equal to 0 will print "Sorry, your ship was hit one too many times. Do you want to play again?" Once this method exists, call it on falcon and print out the value of health.*/




func wasHit() {
        health -= 5
        if health <= 0 {
            print("Sorry, your ship was hit one too many times. Do you want to play again?")
        }
    }
}
falcon.wasHit()
print(falcon.health)



</string>
			<key>ModifiedRange</key>
			<string>{0, 1691}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{0, 0}</string>
		</dict>
	</array>
	<key>File</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/My Playground.playgroundpage/main.swift</string>
</dict>
</plist>
